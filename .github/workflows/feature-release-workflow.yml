name: Feature to Release CI/CD

on:
  pull_request:
    branches:
      - Release-1.0
    types:
      - closed

jobs:

  test:
    if: github.event.pull_request.merged == true && github.event.pull_request.head.ref != 'main'
    runs-on: ubuntu-latest
    environment: 
      name: 'Test'
    steps:
    - uses: actions/checkout@v2
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: Login to ACR
      run: az acr login --name srikali2009
    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: srikali2009.azurecr.io/myapp:${{ github.sha }}
    - name: Validate JSON
      run: jq . < test_appsettings.json
    - name: Set Azure Web App settings
      run: |
        JSON=`cat test_appsettings.json`
        for key in $(jq -r 'keys[]' <<< "$JSON"); do
            value=$(jq -r --arg key "$key" '.[$key]' <<< "$JSON")
            az webapp config appsettings set --name srikali2009 --resource-group srikali2009 --settings $key=$value
        done
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        images: srikali2009.azurecr.io/myapp:${{ github.sha }}
    - name: Test website
      run: |
        until curl --output /dev/null --silent --head --fail 'srikali2009.azurewebsites.net'; do
            printf '.'
            sleep 5
        done
    - name: Create PR to Main
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh auth login --with-token <<< "${GH_TOKEN}"
        gh pr create --repo ${{ github.repository }} --title "Automatic downmerge from Release-1.0 to main" --body "This is an automatic PR created after successful deployment to the 'Test' environment." --head Release-1.0 --base main

  stage:
    needs: test
    runs-on: ubuntu-latest
    environment:
      name: 'Stage'
      url: 'srikalistage2009.azurewebsites.net'
    steps:
    - uses: actions/checkout@v2
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: Disable Staging Backend in Front Door
      run: |
        az network front-door backend-pool backend remove --front-door-name srikalifd2009 --resource-group srikali2009 --pool-name stagingPool --address srikalistage2009.azurewebsites.net
    - name: Login to ACR
      run: az acr login --name srikali2009
    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: srikali2009.azurecr.io/myapp:${{ github.sha }}
    - name: Validate JSON
      run: jq . < stage_appsettings.json
    - name: Set Azure Web App settings
      run: |
        JSON=`cat stage_appsettings.json`
        for key in $(jq -r 'keys[]' <<< "$JSON"); do
            value=$(jq -r --arg key "$key" '.[$key]' <<< "$JSON")
            az webapp config appsettings set --name srikalistage2009 --resource-group srikali2009 --settings $key=$value
        done
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ secrets.AZURE_STAGE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_STAGE_WEBAPP_PUBLISH_PROFILE }}
        images: srikali2009.azurecr.io/myapp:${{ github.sha }}
    - name: Test website
      run: |
        until curl --output /dev/null --silent --head --fail 'srikalistage2009.azurewebsites.net'; do
            printf '.'
            sleep 5
        done
    - name: Enable Staging Backend in Front Door
      run: |
        az network front-door backend-pool backend add --front-door-name srikalifd2009 --resource-group srikali2009 --pool-name stagingPool --address srikalistage2009.azurewebsites.net --http-port 80 --https-port 443

  perf:
    needs: stage
    runs-on: ubuntu-latest
    environment: 
      name: 'Performance'
      url: 'srikaliperf2009.azurewebsites.net'
    steps:
    - uses: actions/checkout@v2
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: Disable Performance Backend in Front Door
      run: |
        az network front-door backend-pool backend remove --front-door-name srikalifd2009 --resource-group srikali2009 --pool-name perfPool --address srikaliperf2009.azurewebsites.net
    - name: Login to ACR
      run: az acr login --name srikali2009
    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: srikali2009.azurecr.io/myapp:${{ github.sha }}
    - name: Validate JSON
      run: jq . < perf_appsettings.json
    - name: Set Azure Web App settings
      run: |
        JSON=`cat perf_appsettings.json`
        for key in $(jq -r 'keys[]' <<< "$JSON"); do
            value=$(jq -r --arg key "$key" '.[$key]' <<< "$JSON")
            az webapp config appsettings set --name srikaliperf2009 --resource-group srikali2009 --settings $key=$value
        done
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ secrets.AZURE_PERF_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_PERF_WEBAPP_PUBLISH_PROFILE }}
        images: srikali2009.azurecr.io/myapp:${{ github.sha }}
    - name: Test website
      run: |
        until curl --output /dev/null --silent --head --fail 'srikaliperf2009.azurewebsites.net'; do
            printf '.'
            sleep 5
        done
    - name: Enable Performance Backend in Front Door
      run: |
        az network front-door backend-pool backend add --front-door-name srikalifd2009 --resource-group srikali2009 --pool-name perfPool --address srikaliperf2009.azurewebsites.net --http-port 80 --https-port 443
