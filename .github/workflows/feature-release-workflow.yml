name: Feature to Release CI/CD

on:
  pull_request:
    branches:
      - Release-1.0
    types:
      - closed

env:
  AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
  AZURE_WEBAPP_NAME: ${{ secrets.AZURE_WEBAPP_NAME }}
  AZURE_WEBAPP_PUBLISH_PROFILE: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
  AZURE_STAGE_WEBAPP_NAME: ${{ secrets.AZURE_STAGE_WEBAPP_NAME }}
  AZURE_STAGE_WEBAPP_PUBLISH_PROFILE: ${{ secrets.AZURE_STAGE_WEBAPP_PUBLISH_PROFILE }}
  AZURE_PERF_WEBAPP_NAME: ${{ secrets.AZURE_PERF_WEBAPP_NAME }}
  AZURE_PERF_WEBAPP_PUBLISH_PROFILE: ${{ secrets.AZURE_PERF_WEBAPP_PUBLISH_PROFILE }}

jobs:
  test:
    if: github.event.pull_request.merged == true && github.event.pull_request.head.ref != 'main'
    runs-on: ubuntu-latest
    environment: 
      name: 'Test'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ env.AZURE_CREDENTIALS }}

      - name: Login to ACR
        run: az acr login --name srikali2009

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: srikali2009.azurecr.io/myapp:${{ github.sha }}

      - name: Test JSON File
        run: jq . < test_appsettings.json

      - name: Set Azure Web App settings
        run: |
          JSON=`cat test_appsettings.json`
          for key in $(jq -r 'keys[]' <<< "$JSON"); do
              value=$(jq -r --arg key "$key" '.[$key]' <<< "$JSON")
              az webapp config appsettings set --name srikali2009 --resource-group srikali2009 --settings $key=$value
          done

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ env.AZURE_WEBAPP_PUBLISH_PROFILE }}
          images: srikali2009.azurecr.io/myapp:${{ github.sha }}

      - name: Test Website
        run: |
          until curl --output /dev/null --silent --head --fail 'srikali2009.azurewebsites.net'; do
              printf '.'
              sleep 5
          done

  setup_stage:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ env.AZURE_CREDENTIALS }}

      - name: Redirect all traffic to Perf
        run: |
          az network front-door routing-rule update --resource-group srikali2009 --front-door-name srikalifd2009 --name routingRule1 --backend-pool backendpool1

  stage:
    needs: setup_stage
    runs-on: ubuntu-latest
    environment:
      name: 'Stage'
      url: 'srikalistage2009.azurewebsites.net'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ env.AZURE_CREDENTIALS }}

      - name: Login to ACR
        run: az acr login --name srikali2009

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: srikali2009.azurecr.io/myapp:${{ github.sha }}

      - name: Test JSON File
        run: jq . < stage_appsettings.json

      - name: Set Azure Web App settings
        run: |
          JSON=`cat stage_appsettings.json`
          for key in $(jq -r 'keys[]' <<< "$JSON"); do
              value=$(jq -r --arg key "$key" '.[$key]' <<< "$JSON")
              az webapp config appsettings set --name srikalistage2009 --resource-group srikali2009 --settings $key=$value
          done

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_STAGE_WEBAPP_NAME }}
          publish-profile: ${{ env.AZURE_STAGE_WEBAPP_PUBLISH_PROFILE }}
          images: srikali2009.azurecr.io/myapp:${{ github.sha }}

      - name: Test Website
        run: |
          until curl --output /dev/null --silent --head --fail 'srikalistage2009.azurewebsites.net'; do
              printf '.'
              sleep 5
          done

  setup_perf:
    needs: stage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ env.AZURE_CREDENTIALS }}

      - name: Redirect all traffic to Prod
        run: |
          az network front-door routing-rule update --resource-group srikali2009 --front-door-name srikalifd2009 --name routingRule1 --backend-pool backendpool2

  perf:
    needs: setup_perf
    runs-on: ubuntu-latest
    environment:
      name: 'Perf'
      url: 'srikaliperf2009.azurewebsites.net'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ env.AZURE_CREDENTIALS }}

      - name: Login to ACR
        run: az acr login --name srikali2009

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: srikali2009.azurecr.io/myapp:${{ github.sha }}

      - name: Test JSON File
        run: jq . < perf_appsettings.json

      - name: Set Azure Web App settings
        run: |
          JSON=`cat perf_appsettings.json`
          for key in $(jq -r 'keys[]' <<< "$JSON"); do
              value=$(jq -r --arg key "$key" '.[$key]' <<< "$JSON")
              az webapp config appsettings set --name srikaliperf2009 --resource-group srikali2009 --settings $key=$value
          done

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_PERF_WEBAPP_NAME }}
          publish-profile: ${{ env.AZURE_PERF_WEBAPP_PUBLISH_PROFILE }}
          images: srikali2009.azurecr.io/myapp:${{ github.sha }}

      - name: Test Website
        run: |
          until curl --output /dev/null --silent --head --fail 'srikaliperf2009.azurewebsites.net'; do
              printf '.'
              sleep 5
          done
